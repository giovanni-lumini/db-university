-CREATE DATABASE `db-university`;
-USE `db-university`;
-import database

1. Selezionare tutti gli studenti nati nel 1990 (160) (OK)
SELECT *
FROM `students`
WHERE `date_of_birth` >= '1990-01-01'
AND `date_of_birth` < '1991-01-01';

o

SELECT *
FROM `students`
WHERE YEAR (date_of_birth) = 1990;

2. Selezionare tutti i corsi che valgono più di 10 crediti (479) (OK)
SELECT *
FROM `courses`
WHERE `cfu` > 10;

3. Selezionare tutti gli studenti che hanno più di 30 anni (OK)
SELECT *
FROM `students`
WHERE `date_of_birth` <= '1994-12-04'; (vale solo per oggi, l'anno prossimo sarebbe sbagliato)

quindi

SELECT *
FROM `students`
WHERE TIMESTAMPDIFF (YEAR, `date_of_birth`, CURDATE()) >= 30

4. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di laurea (286) (OK)
SELECT *
FROM `courses`
WHERE `year` = 1
AND `period` = 'I semestre';

5. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del 20/06/2020 (21) (OK)
SELECT *
FROM `exams`
WHERE `date` = '2020/06/20'
AND `hour` > '14:00:00';

o

SELECT *
FROM `exams`
WHERE `date` = '2020/06/20'
AND hour(`hour`) >= 14;

6. Selezionare tutti i corsi di laurea magistrale (38)
SELECT *
FROM `degrees`
WHERE `level` = 'magistrale'

7. Da quanti dipartimenti è composta l'università? (12) (OK)
SELECT *
FROM `departments` (questo non da il numero)

quindi

SELECT COUNT(`id`) (questo ritorna una tabella con il numero)
FROM `departments`

o

SELECT COUNT(`id`)AS `totale dipartimenti` (aggiungendo questo ritorna una tabella con il titolo )
FROM `departments`

8. Quanti sono gli insegnanti che non hanno un numero di telefono? (50)
SELECT *
FROM `teachers`
WHERE `phone` IS null; (questo non da il numero)

quindi

SELECT COUNT(`id`) AS `teachers without phone` (questo ritorna una tabella con il numero)
FROM `teachers`
WHERE `phone` IS null;
o
WHERE `phone` isnull(phone);

9. Inserire nella tabella degli studenti un nuovo record con i propri dati (per il campo degree_id, inserire un valore casuale)
INSERT INTO `students` (`degree_id`, `name`, `surname`, `tutte le altre colonne`)
VALUES (`61`, "giovanni", "lumini", "ecc")

10. Cambiare il numero dell’ufficio del professor Pietro Rizzo in 126
UPDATE `teachers`
SET `office_number` = 126
WHERE `id` = 58

11. Eliminare dalla tabella studenti il record creato precedentemente al punto 9
DELETE FROM `students`
WHERE `id` = 1


# Group by:
1-Contare quanti iscritti ci sono stati ogni anno
SELECT `enrolment_date`, COUNT(id)
FROM `students`
GROUP BY `enrolment_date`
ORDER BY `enrolment_date`

2-Contare gli insegnanti che hanno l'ufficio nello stesso edificio
SELECT `office_address`, COUNT(id)
FROM `teachers`
GROUP BY `office_address`

3-Calcolare la media dei voti di ogni appello d'esame
SELECT `exam_id`, AVG(vote)
FROM `exam_student`
GROUP BY `exam_id`

4-Contare quanti corsi di laurea ci sono per ogni dipartimento
SELECT COUNT(id) AS `corsi di laurea`
FROM `departments`

# Joins:
5-Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
SELECT `students`.`name` AS `student_name`,
`degrees`.`name` AS `degrees_name`
FROM `students`
JOIN `degrees`
ON `students`.`degree_id`= `degrees`.`id`
WHERE `degrees`.`name` = "Corso di Laurea in Economia";

6-Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
SELECT
`degrees`.`name` AS `degree_name`,
`departments`.`name` AS `department_name`
FROM `degrees`
JOIN `departments`
ON `degrees`.`department_id`= `departments`.`id`
WHERE `degrees`.`level` = "magistrale"
AND `departments`.`name` = "Dipartimento di Neuroscienze";

7-Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
SELECT `courses`.`name` AS `course_name`,
`teachers`.`name` AS `teacher_name`,
`teachers`.`surname` AS `teacher_surname`
FROM `course_teacher`
JOIN `teachers` ON `course_teacher`.`teacher_id`= `teachers`.`id`
JOIN `courses` ON `course_teacher`.`course_id`= `courses`.`id`
WHERE `teachers`.`id` = 44

8-Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome
`students`.`surname` AS `student_surname`,
`students`.`name` AS `student_name`,
`degrees`.`name` AS `degree_name`,
`departments`.`name` AS `department_name`
FROM `students`
JOIN `degrees` ON `students`.`degree_id`= `degrees`.`id`
JOIN `departments` ON `degrees`.`department_id`= `departments`.`id`
ORDER BY `students`.`surname` ASC;

9-Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT 
`degrees`.`name` AS `degree_name`,
`courses`.`name` AS `courses_name`,
`teachers`.`surname` AS `teacher_surname`
FROM `course_teacher`
JOIN `courses` ON `course_teacher`.`course_id`= `courses`.`id`
JOIN `teachers` ON `course_teacher`.`teacher_id`= `teachers`.`id`
JOIN `degrees` ON `courses`.`degree_id`= `degrees`.`id`

10-Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

11-BONUS: Selezionare per ogni studente il numero di tentativi sostenuti per ogni esame, stampando anche il voto massimo. Successivamente, filtrare i tentativi con voto minimo 18.
